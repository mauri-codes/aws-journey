{
   "Comment": "User Deployment steps",
   "StartAt": "StartDeployment",
   "States": {
      "StartDeployment": {
         "Type": "Task",
         "Resource": "arn:aws:states:::lambda:invoke",
         "Next": "Deploy",
         "Parameters": {
            "FunctionName": "${StartDeploymentFunctionArn}",
            "Payload.$": "$"
         },
         "Catch": [{
            "ErrorEquals": ["States.ALL"],
            "ResultPath": "$",
            "Next": "ErrorHandler"
         }]
      },
      "Deploy": {
         "Type" : "Task",
         "Resource": "arn:aws:states:::codebuild:startBuild",
         "Next": "CloseDeployment",
         "Parameters": {
            "ProjectName": "${DeployCodebuildProjectArn}",
            "EnvironmentVariablesOverride": [{
               "Name": "ACTION",
               "Type": "PLAINTEXT",
               "Value.$": "$.Payload.Action"
            },{
               "Name": "LAB_ID",
               "Type": "PLAINTEXT",
               "Value.$": "$.Payload.LabId"
            },{
               "Name": "USER_ID",
               "Type": "PLAINTEXT",
               "Value.$": "$.Payload.UserId"
            },{
               "Name": "RUN_ID",
               "Type": "PLAINTEXT",
               "Value.$": "$.Payload.RunId"
            },{
               "Name": "DEPLOY_PARAMS",
               "Type": "PLAINTEXT",
               "Value.$": "$.Payload.Params"
            }]
         },
         "Catch": [{
            "ErrorEquals": ["States.ALL"],
            "ResultPath": "$",
            "Next": "ErrorHandler"
         }]
      },
      "CloseDeployment": {
         "Type" : "Task",
         "Resource": "arn:aws:states:::lambda:invoke",
         "Parameters": {
            "FunctionName": "${CloseDeploymentFunctionArn}",
            "Payload.$": "$"
         },
         "End": true,
         "Catch": [{
            "ErrorEquals": ["States.ALL"],
            "ResultPath": "$",
            "Next": "ErrorHandler"
         }]
      },
      "ErrorHandler": {
         "Type" : "Task",
         "Resource": "arn:aws:states:::lambda:invoke",
         "Parameters": {
            "FunctionName": "${ErrorHandlerArn}",
            "Payload.$": "$"
         },
         "End": true
      }
   }
}
